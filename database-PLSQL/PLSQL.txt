set serveroutput on;

declare
name VARCHAR2(20):='Priya';
begin
dbms_output.put_line('Welcome ' || name);
end;

DECLARE
eid number(5):=101;
ename VARCHAR2(20):='Priya';
esalary number(6) default 15000;
begin
dbms_output.put_line('id: ' || eid);
dbms_output.put_line('name: ' || ename);
dbms_output.put_line('salary: ' || esalary);
end;

DECLARE
num1 number(5):=10;
num2 number(5):=20;
begin
dbms_output.put_line('sum: ' || (num1+num2));
dbms_output.put_line('sub: ' || (num1-num2));
dbms_output.put_line('multiply: ' || (num1*num2));
dbms_output.put_line('divi: ' || (num1/num2));
end;

DECLARE
num1 number(5);
num2 number(5);
begin
dbms_output.put_line('Enter 2 numbers');
num1:= &n1;
num2:= &n2;
dbms_output.put_line('sum: ' || (num1+num2));
dbms_output.put_line('sub: ' || (num1-num2));
dbms_output.put_line('multiply: ' || (num1*num2));
dbms_output.put_line('divi: ' || (num1/num2));
end;

DECLARE
name tbl_agents.AGENT_NAME%TYPE;
area tbl_agents.WORKING_AREA%TYPE;
BEGIN
select AGENT_NAME,WORKING_AREA into name,area from tbl_agents where AGENT_CODE= &c;
dbms_output.put_line('AGENT NAME : ' || name);
dbms_output.put_line('WORKING AREA : ' || area);
end;

--SCOPE VAR--

DECLARE
V_OUTVAR VARCHAR2(20):='GLOBAL VARIABLE';
BEGIN
  DECLARE
  V_INVAR VARCHAR(20):='LOCAL VARIABLE';
  BEGIN
        DBMS_OUTPUT.PUT_LINE(V_INVAR);
        DBMS_OUTPUT.PUT_LINE(V_OUTVAR);
  END;
DBMS_OUTPUT.PUT_LINE(V_OUTVAR);
END;

BEGIN
INSERT INTO tbl_agents values(&CODE,&NAME,&AREA);
dbms_output.put_line('RECORD EINSERTED');
DELETE FROM tbl_agents WHERE AGENT_CODE= &ag_code;
dbms_output.put_line('RECORD Deleted');
end;

--IF--
DECLARE
num1 number(5);
num2 number(5);
begin
dbms_output.put_line('Enter 2 numbers');
num1:= &n1;
num2:= &n2;
IF num1>num2 then
dbms_output.put_line(num1 || ' is greater');
else
dbms_output.put_line(num2 || ' is greater');
end if;
end;

--elseif--

DECLARE
num1 number(5);
num2 number(5);
num3 number(5);
begin
dbms_output.put_line('Enter 2 numbers');
num1:= &n1;
num2:= &n2;
num3:= &n3;
IF num1>num2 AND num1>num3 then
dbms_output.put_line(num1 || ' is greater');
elsif num2>num1 and num2>num3 then
dbms_output.put_line(num2 || ' is greater');
else
dbms_output.put_line(num3 || ' is greater');
end if;
end;

--SWITCHCASE--
DECLARE
V_CH CHAR(1);
BEGIN
V_CH:= &c;
CASE V_CH
when 'r' then
DBMS_OUTPUT.PUT_LINE('RED');
when 'g' then
DBMS_OUTPUT.PUT_LINE('GREEN');
when 'b' then
DBMS_OUTPUT.PUT_LINE('BLUE');
else
DBMS_OUTPUT.PUT_LINE('UNKNOWN COLOR');
END CASE;
END;

--LOOP--
DECLARE
V_COUNT number(3) DEFAULT 0;
BEGIN
LOOP
V_COUNT:= V_COUNT+10;
DBMS_OUTPUT.PUT_LINE(V_COUNT);
EXIT WHEN V_COUNT=100;
END LOOP;
END;

--WHILE--
DECLARE
V_COUNT number(3) DEFAULT 0;
BEGIN
WHILE V_COUNT<=50
LOOP
V_COUNT:= V_COUNT+10;
DBMS_OUTPUT.PUT_LINE(V_COUNT);
END LOOP;
END;

DECLARE
V_COUNT number(3) DEFAULT 0;
V_COUNT1 number(3);
BEGIN
FOR V_COUNT IN 1..20
LOOP
V_COUNT1:= V_COUNT+2;
DBMS_OUTPUT.PUT_LINE(V_COUNT1);
END LOOP;
END;

DECLARE
V_COUNT number(3) DEFAULT 0;
V_COUNT1 number(3);
BEGIN
FOR V_COUNT IN REVERSE 1..20
LOOP
V_COUNT1:= V_COUNT+2;
DBMS_OUTPUT.PUT_LINE(V_COUNT1);
END LOOP;
END;

--stored procedure--

create or Replace procedure Myproc1 
is
v_name VARCHAR2(20);
begin
select AGENT_NAME into v_name from tbl_agents where AGENT_CODE='A101';
dbms_output.put_line('Name '|| v_name); 
end;
/

begin
Myproc1;
end;

create or replace procedure addition(a number,b number) is
add number(5);
begin
add:= a+b;
dbms_output.put_line('addition: '|| add);
end;
/

exec addition(31,31);


create or replace function addition(a number,b number) return number is
add number(5);
begin
add:= a+b;
return add;
end;
/

declare
res number(5);
begin
res:= addition(20,38);
dbms_output.put_line(res);
end;

--OUT PARAMETER--
create or replace procedure count1(c out number)  is
v_count number:=5;
begin
v_count:= v_count+1;
dbms_output.put_line('Count: '||v_count);

end;
/

declare
num number(5):=0;
begin
count1(num);
end;
--IN OUT PARAM--
create or replace procedure count1(c IN out number)  is
--v_count number:=5;
begin
c:= c+1;
dbms_output.put_line('Count: '||c);

end;
/

declare
num number(5):=10;
begin
count1(num);
end;

--CURSOR--
DECLARE
id  tbl_agents.AGENT_CODE%type;
name  tbl_agents.AGENT_NAME%type;
location  tbl_agents.WORKING_AREA%type;
cursor c_agent is
select * from tbl_agents;
begin
open c_agent;
loop
fetch c_agent INTO id,name,location;
exit when c_agent%notfound;
dbms_output.put_line(id ||' '|| name ||' ' || location);
end loop;
close c_agent;
end;

--EXCEPTION HANDLING--
DECLARE
V_NAME tbl_agents.AGENT_NAME%type;
begin
select AGENT_NAME INTO V_NAME from tbl_agents where AGENT_CODE='A106';
dbms_output.put_line('Name: '|| V_NAME );
exception
when NO_DATA_FOUND then
dbms_output.put_line('USER NOT FOUND');
END;

DECLARE
V_age number(2);
AGE_ERROR exception;
begin
V_age:=&a;
if V_age<=0 then
raise AGE_ERROR;
else
dbms_output.put_line('AGE: '|| V_age );
END IF;
exception
when AGE_ERROR then
dbms_output.put_line('INVALID AGE');
END;

--Package--
CREATE OR REPLACE PACKAGE BODY my_pack AS
    FUNCTION Addition(a NUMBER, b NUMBER) RETURN NUMBER IS
        result NUMBER;  
    BEGIN
        result := a + b; 
        RETURN result; 

    FUNCTION Subtraction(a NUMBER, b NUMBER) RETURN NUMBER IS
        result NUMBER;  
    BEGIN
        result := a - b;  
        RETURN result; 
    END Subtraction;
END my_pack;
/

DECLARE
    result_add NUMBER;
    result_sub NUMBER;
BEGIN
    result_add := my_pack.Addition(5, 3); 
    result_sub := my_pack.Subtraction(5, 3);  

    DBMS_OUTPUT.PUT_LINE('Addition Result: ' || result_add);
    DBMS_OUTPUT.PUT_LINE('Subtraction Result: ' || result_sub);
END;
/









